services:
  # Backend application (Laravel)
  app:
    build:
      context: ./backend_laravel
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./backend_laravel:/var/www
    depends_on:
      - postgres
    networks:
      - laravel

  # Nginx
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./backend_laravel:/var/www
      - ./docker/nginx/:/etc/nginx/conf.d/
    networks:
      - laravel

  # PostgreSQL database
  postgres:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - '.data:/var/lib/postgresql/data'
      - './docker/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql'
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - laravel

  # Frontend application (React)
  frontend:
    build:
      context: ./frontend_react
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./frontend_react:/app
      - /app/node_modules
    ports:
      - "3000:3000"
      - "9229:9229"
    networks:
      - laravel
    command:
      - npm
      - run
      - start
    depends_on:
      - app

networks:
  laravel:
    driver: bridge